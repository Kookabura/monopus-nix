#!/bin/bash
#
# Simple count security update not installed in system
#
# Usage: check_sec_update [-w warning] [-c critical] [-H]
#   -w --warning    number security update above or equal is generate warning
#   -c --critical   number security update above or equal is generate error
#   -H --help       output this help
# Example
# ./check_sec_update -w 3 -c 5
# example output: check_sec_update_ok::sys==debian | sec_update=2;;;;
#
# Copyleft TolkIT (team@tolkit.top)
# author Sergey Egorushkin (SeroEgor@Gmail.com)

while [[ -n "$1" ]]; do
  case $1 in
  --warning | -w)
    warn=$2
    shift
    ;;
  --critical | -c)
    crit=$2
    shift
    ;;
  --help | -H)
    sed -n '2,14p' "$0" | tr -d '#'
    exit 3
    ;;
  *)
    echo "Unknown argument: $1"
    exit 3
    ;;
  esac
  shift
done

warn=${warn:=3}
crit=${crit:=5}
os=""
sec=0

if [[ $warn -ge $crit ]]; then
  echo "check_sec_update.warcri"
  exit 2
fi

if [ -s ../tmp/update-security ]; then  # if exist tmp-file with previous values
    sec=$(< ../tmp/update-security)     # read them
else
    touch ../tmp/queries                # if not exist tmp-file - create them
fi

# check name os, now support Centos, Debian and Ubuntu. Count security update avariable in var "sec"
if [ "$( < /etc/os-release grep -w "ID" | grep -c "centos")" -eq 1 ]; then      #CentOS
    os="Centos"
    sh ./security-update.sh "$os" &     # run script for check security update
elif [ "$( < /etc/os-release grep -w "ID" | grep -c "debian")" -eq 1 ]; then    #Debian
    os="Debian"
    sh ./security-update.sh "$os" &
elif [ "$( < /etc/os-release grep -w "ID" | grep -c "ubuntu")" -eq 1 ]; then    #Ubuntu
    os="Ubuntu"
    sh ./security-update.sh "$os" &
else                                                                            #not support 
    os=$( < /etc/os-release grep -w "ID" | awk '{print substr($0, 4, length($0)-1)}' | sed 's/"//g')
    echo "check_sec_update.unk::sys==${os}__sec==0 | sec_update=0;;;;"
    exit 2
fi

if [ "$sec" = "error" ] && [ "$os" = "Centos" ]; then
    echo "check_sec_update.error-centos"
    exit 2
elif [ "$sec" = "error" ] && [ "$os" = "Debian" ] || [ "$os" = "Ubuntu" ]; then
    echo "check_sec_update.error-debubuntu"
    exit 2
fi

if [ "$sec" -ge "$crit" ]; then
    echo "check_sec_update.cri::sys==${os}__sec==${sec} | sec_update=${sec};;;;"
    exit 2
elif [ "$sec" -ge "$warn" ]; then
    echo "check_sec_update.war::sys==${os}__sec==${sec} | sec_update=${sec};;;;"
    exit 1;
else
    echo "check_sec_update.ok::sys==${os}__sec==${sec} | sec_update=${sec};;;;"
    exit 0;
fi