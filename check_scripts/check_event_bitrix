#!/bin/bash
#
# Simple check queue events in Bitrix
#
# Usage: check_mysql_queries [-H] [-w] [-c] [-e] [-u]
#   -H --help       output this help
#   -c --critical   critical threshold of events that generates the error
#   -w --warning    warning threshold of events that generates the warning
#   -t --time       interval in minutes, from the time the event was created
#   -u --user       database user under which name check number events not success
#
# Copyleft TolkIT (team@tolkit.top)
# author Sergey Egorushkin (SeroEgor@Gmail.com)

while [[ -n "$1" ]]; do
    case $1 in
        --critical | -c)
            critical=$2
            shift
            ;;
        --warning | -w)
            warning=$2
            shift
            ;;
        --time | -t)
            interval=$2
            shift
            ;;
        --user | -u)
            user=$2
            shift
            ;;
        --help | -H)
            sed -n '2,14p' "$0" | tr -d '#'
            exit 3
            ;;
        *)
            echo "Unknown argument: $1"
            exit 3
            ;;
    esac
    shift
done

state=3
states_text=("ok" "warn" "crit" "unknown")                              # texts possable states
user=${user:='bx_clusteruser'}                                          # user name in database
critical=${critical:=50}                                                # set critical threshold not success events
warning=${warning:=10}                                                  # set warning threshold not success events
interval=${event:=5}                                                    # interval in minutes, from the time the event was created
num=$(mysql -e "USE sitemanager; SELECT COUNT(*) FROM b_event WHERE success_exec = 'N' AND DATE_INSERT < DATE_SUB(CURRENT_TIMESTAMP(), INTERVAL ${interval} MINUTE)" | tail -n +2) 

if [ "$num" -gt "$critical" ]; then                                     # if number not success events greather threshold, then critical
    output="events==${num}__treshold==${critical}__warning==${warning}__interval==${interval}"
    perfdata="events=${num};;;;"
    state=2
elif [ "$num" -gt "$warning" ]; then                                    # if greather warning treshold, then warning
    output="events==${num}__treshold==${critical}__warning==${warning}__interval==${interval}"
    perfdata="events=${num};;;;"
    state=1
else                                                                    # else ok
    output="events==${num}__treshold==${critical}__warning==${warning}__interval==${interval}"
    perfdata="events=${num};;;;"
    state=0
fi
echo "check_event_bitrix_${states_text[$state]}::${output} | ${perfdata}" # give values to monopus
exit  $state