#!/bin/bash

if [ "$1" = "-w" ] && [ "$2" -gt "0" ] && [ "$3" = "-c" ] && [ "$4" -gt "0" ]; then

        mem_m=`free -m |grep Mem`
        mem_b=`free -b |grep Mem`
        memTotal_b=`echo $mem_b |awk '{print $2}'`
        memFree_b=`echo $mem_b |awk '{print $4}'`
        memBuffer_b=`echo $mem_b |awk '{print $6}'`
        memCache_b=`echo $mem_b |awk '{print $7}'` # available memory

        memTotal_m=`echo $mem_m |awk '{print $2}'`
        memFree_m=`echo $mem_m |awk '{print $4}'`
        memBuffer_m=`echo $mem_m |awk '{print $6}'`
        memCache_m=`echo $mem_m |awk '{print $7}'` # available memory

        memUsed_b=`echo $mem_b |awk '{print $3}'`
        memUsed_m=`echo $mem_m |awk '{print $3}'`

        memUsedPrc=$((($memUsed_b*100)/$memTotal_b))


        if [ "$memUsedPrc" -ge "$4" ]; then
                echo "local_memory_cri::total==${memTotal_m}__used_unt==${memUsed_m}__user_pct==${memUsedPrc}|TOTAL=$memTotal_b;;;; USED=$memUsed_b;;;; CACHE=$memCache_b;;;; BUFFER=$memBuffer_b;;;;"
                $(exit 2)
        elif [ "$memUsedPrc" -ge "$2" ]; then
                echo "local_memory_war::total==${memTotal_m}__used_unt==${memUsed_m}__user_pct==${memUsedPrc}|TOTAL=$memTotal_b;;;; USED=$memUsed_b;;;; CACHE=$memCache_b;;;; BUFFER=$memBuffer_b;;;;"
                $(exit 1)
        else
                echo "local_memory_ok::total==${memTotal_m}__used_unt==${memUsed_m}__user_pct==${memUsedPrc}|TOTAL=$memTotal_b;;;; USED=$memUsed_b;;;; CACHE=$memCache_b;;;; BUFFER=$memBuffer_b;;;;"
                $(exit 0)
        fi

else
        echo "check_mem v1.1"
        echo ""
        echo "Usage:"
        echo "check_mem.sh -w <warnlevel> -c <critlevel>"
        echo ""
        echo "warnlevel and critlevel is percentage value without %"
        echo ""
        echo "Copyright (C) 2012 Lukasz Gogolin (lukasz.gogolin@gmail.com)"
        exit
fi
