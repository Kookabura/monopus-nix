#!/usr/bin/env bash
#
# Simple check Memcached
#
# Usage: check_memcached.sh [-h host] [-p port] [-w warning] [-c critical]
#   -h, --host                  Memcached host
#   -p, --port                  Memcached port, eg: 11211
#   -w, --warning WARNING       Warning value (percent)
#   -c, --critical CRITICAL     Critical value (percent)
#   -H, --help                  Display this screen
#

while [[ -n "$1" ]]; do
  case $1 in
  --host | -h)
    host=$2
    shift
    ;;
  --port | -p)
    port=$2
    shift
    ;;
  --warning | -w)
    warn=$2
    shift
    ;;
  --critical | -c)
    crit=$2
    shift
    ;;
  --help | -H)
    sed -n '2,11p' "$0" | tr -d '#'
    exit 3
    ;;
  *)
    echo "Unknown argument: $1"
    exec "$0" --help
    exit 3
    ;;
  esac
  shift
done

host=${host:=127.0.0.1}
port=${port:=11211}
warn=${warn:=90}
crit=${crit:=95}

if [[ $warn -ge $crit ]]; then
  echo "check_memcached.warcri"
  exit 2
fi

output=$(echo 'stats' | nc -w 1 "$host" "$port" 2> /dev/null)

if [[ $? -ne 0 ]] || [[ -z $output ]]; then
  echo "check_memcached.timeout"
  exit 2
fi

# limit_maxbytes = Number of bytes this server is permitted to use for storage.
# bytes = Current number of bytes used by this server to store items.
# https://dev.mysql.com/doc/refman/5.7/en/ha-memcached-stats-general.html
limit_maxbytes=$(echo "$output" | grep 'limit_maxbytes' | awk '{gsub(/\r/, ""); print $3}') 
limit_conn=$(echo "$output" | grep 'max_connections' | awk '{gsub(/\r/, ""); print $3}')
cur_conn=$(echo "$output" | grep 'curr_connections' | awk '{gsub(/\r/, ""); print $3}')
bytes=$(echo "$output" | grep ' bytes ' | awk '{gsub(/\r/, ""); print $3}') #gsub need, if need direct output in echo!!
get_hits=$(echo "$output" | grep 'get_hits' | awk '{gsub(/\r/, ""); print $3}')
get_misses=$(echo "$output" | grep 'get_misses' | awk '{gsub(/\r/, ""); print $3}')

if [[ -z $limit_maxbytes ]] || [[ -z $bytes ]] || [[ $limit_maxbytes -eq 0 ]]; then
  used=0
  limit_gb=0.0
  hit_ratio=0
  status="tot_mem==${limit_gb}__used_mem==${used}__tot_con==${limit_conn}__cur_con==${cur_conn}__hit_rt==${hit_ratio}"
  perfdata="TOT_MEM=${limit_gb};;;; USED_MEM=${used};;;; TOTAL_CONN=${limit_conn};;;; CUR_CONN=${cur_conn};;;; HIT_RATE=${hit_ratio}"
  echo "check_memcached.cri::${status}|${perfdata}"
  exit 2
fi

if [[ "$bytes" -eq 0 ]]; then
  used=0
else
  used=$(awk 'BEGIN { printf("%0.1f", ("'$bytes'" * 100) / "'$limit_maxbytes'")}')
fi

hit_ratio=$(awk 'BEGIN { printf("%0.2f", ("'$get_hits'" / ("'$get_misses'" + "'$get_hits'")) * 100) }')
limit_gb=$(awk 'BEGIN { printf("%0.1f", "'$limit_maxbytes'" / 1024 / 1024 / 1024) }')
status="tot_mem==${limit_gb}__used_mem==${used}__tot_con==${limit_conn}__cur_con==${cur_conn}__hit_rt==${hit_ratio}"
perfdata="TOT_MEM=${limit_gb};;;; USED_MEM=${used};;;; TOTAL_CONN=${limit_conn};;;; CUR_CONN=${cur_conn};;;; HIT_RATE=${hit_ratio}"

if [ "$(echo "$used > $crit" | bc)" -eq 1 ]; then
  echo "check_memcached.cri::${status}|${perfdata}"
  exit 2
elif [ "$(echo "$used > $warn" | bc)" -eq 1 ]; then
  echo "check_memcached.war::${status}|${perfdata}"
  exit 1
else
  echo "check_memcached.ok::${status}|${perfdata}"
  exit 0
fi